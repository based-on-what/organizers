from howlongtobeatpy import HowLongToBeat
import requests

api_key = ''
steam_id = ''

# Crear una instancia del cliente HowLongToBeat
hltb = HowLongToBeat()

# Definir el valor del parámetro "include_appinfo" (1 para incluir, 0 para no incluir)
include_appinfo = 1

# URL de la Steam Web API para obtener la lista de juegos de un usuario
url = f'http://api.steampowered.com/IPlayerService/GetOwnedGames/v0001/?key={api_key}&steamid={steam_id}&format=json&include_appinfo={include_appinfo}'

response = requests.get(url)

game_dict = {}

if response.status_code == 200:
    try:
        data = response.json()
        for game in data['response']['games']:
            game_name = game.get('name', 'N/A')
            results = hltb.search(game_name)

            # Obtener el atributo main_story del primer resultado
            if results:
                main_story = results[0].main_story
                game_dict[game_name] = main_story
    except ValueError:
        print("La respuesta no es un JSON válido.")
else:
    print(f"Error en la solicitud: {response.status_code}")


new_steam_id = ''

url = f'http://api.steampowered.com/IPlayerService/GetOwnedGames/v0001/?key={api_key}&steamid={new_steam_id}&format=json&include_appinfo={include_appinfo}'

response = requests.get(url)

if response.status_code == 200:
    try:
        data = response.json()
        for game in data['response']['games']:
            game_name = game.get('name', 'N/A')
            results = hltb.search(game_name)

            # Obtener el atributo main_story del primer resultado
            if results:
                main_story = results[0].main_story
                game_dict[game_name] = main_story
    except ValueError:
        print("La respuesta no es un JSON válido.")
else:
    print(f"Error en la solicitud: {response.status_code}")

# Ordenar el diccionario por el valor (main_story) de manera ascendente
sorted_game_dict = dict(sorted(game_dict.items(), key=lambda item: item[1]))

# Guardar el diccionario en un archivo de texto
with open('juegos_main_story.txt', 'w') as txt_file:
    for game, main_story in sorted_game_dict.items():
        txt_file.write(f"Nombre del juego: {game}\n")
        txt_file.write(f"Main Story: {main_story}\n\n")

print("Diccionario guardado en 'juegos_main_story.txt'")
